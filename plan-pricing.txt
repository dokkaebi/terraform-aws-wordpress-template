------- VPC: free -------
  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {

  # module.vpc.aws_route_table_association.database[0] will be created
  + resource "aws_route_table_association" "database" {

  # module.vpc.aws_route_table_association.database[1] will be created
  + resource "aws_route_table_association" "database" {

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {

  # module.vpc.aws_subnet.database[0] will be created
  + resource "aws_subnet" "database" {

  # module.vpc.aws_subnet.database[1] will be created
  + resource "aws_subnet" "database" {

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {

  # module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
------- /VPC -------

------- EIP: free while associated with instance -------
  # module.wp-host.aws_eip.wp-eip will be created
  + resource "aws_eip" "wp-eip" {

  # module.wp-host.aws_eip_association.wp-eip-association will be created
  + resource "aws_eip_association" "wp-eip-association" {
------- /EIP -------

------- IAM: free -------
  # module.wp-host.aws_iam_instance_profile.profile will be created
  + resource "aws_iam_instance_profile" "profile" {

  # module.wp-host.aws_iam_role.role will be created
  + resource "aws_iam_role" "role" {

  # module.wp-host.aws_iam_role_policy_attachment.ssm-policy will be created
  + resource "aws_iam_role_policy_attachment" "ssm-policy" {
------- /IAM -------

------- EC2: free for one t2.micro or t3.micro -------
  # module.wp-host.module.ec2_instance.aws_instance.this[0] will be created
  + resource "aws_instance" "this" {
------- /EC2 -------

------- Security Groups: free -------
  # module.wp-host.module.security_group.aws_security_group.this_name_prefix[0] will be created
  + resource "aws_security_group" "this_name_prefix" {

  # module.wp-host.module.security_group.aws_security_group_rule.egress_rules[0] will be created
  + resource "aws_security_group_rule" "egress_rules" {

  # module.wp-host.module.security_group.aws_security_group_rule.ingress_rules[0] will be created
  + resource "aws_security_group_rule" "ingress_rules" {

  # module.wp-host.module.security_group.aws_security_group_rule.ingress_rules[1] will be created
  + resource "aws_security_group_rule" "ingress_rules" {

  # module.wp-host.module.security_group.aws_security_group_rule.ingress_rules[2] will be created
  + resource "aws_security_group_rule" "ingress_rules" {

  # module.wp-host.module.security_group.aws_security_group_rule.ingress_rules[3] will be created
  + resource "aws_security_group_rule" "ingress_rules" {

  # module.wp-db.module.security_group_db.module.sg.aws_security_group.this_name_prefix[0] will be created
  + resource "aws_security_group" "this_name_prefix" {

  # module.wp-db.module.security_group_db.module.sg.aws_security_group_rule.egress_rules[0] will be created
  + resource "aws_security_group_rule" "egress_rules" {

  # module.wp-db.module.security_group_db.module.sg.aws_security_group_rule.ingress_rules[0] will be created
  + resource "aws_security_group_rule" "ingress_rules" {

  # module.wp-db.module.security_group_db.module.sg.aws_security_group_rule.ingress_with_self[0] will be created
  + resource "aws_security_group_rule" "ingress_with_self" {
------- /Security Groups -------

------- RDS: free for one t2.micro, t3.micro, or t4g.micro -------
  # module.wp-db.module.db.module.db_instance.aws_db_instance.this[0] will be created
  + resource "aws_db_instance" "this" {

  # module.wp-db.module.db.module.db_option_group.aws_db_option_group.this[0] will be created
  + resource "aws_db_option_group" "this" {

  # module.wp-db.module.db.module.db_parameter_group.aws_db_parameter_group.this[0] will be created
  + resource "aws_db_parameter_group" "this" {

  # module.wp-db.module.db.module.db_subnet_group.aws_db_subnet_group.this[0] will be created
  + resource "aws_db_subnet_group" "this" {
------- /RDS -------

